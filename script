A. What we'll be making
Before we can get to creating our app let's look at what we're creating.
We're creating an application that connects to the moviedb api that'll allow us to
search the database choose a movie and and ahow some simple information like the release date and the synapses.
Then if we want to search something new we just click this little search button up here and we're back to searching again.

Now, the first thing we have to do when creating our app in React is plan how we would break down our app into components. 
Let's go ahead and break this down into components.  Top to bottom

We got a little search button that could be it's own thing for like a header which could be a component by it self

Then we have a search input that shows movies when typed in. So that all by it self can be a component. 
Then we have these cards displaying the search results title and backgrounds could be a component.


Then when we click on one of the these cards the search and search-results go away 
and the movie details show up. So this would be a completely seperate component from the search.

Let's call that movie details.

Last but not least we have simple footer which is always a good time to create a component. 

So next up we're going to setup the project with the necessary styles and links then get to creating these components

B.Setup Project
Files: style.css, animations.css 
0. ng new movie-search
1. npm install materialize-css --save
2. add paths to styles in angular-cli.json
3. add font link in index.html,   <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">  
4. add custom styles from the course files

C.Creating the component structure
So now we're going to create the structure of what we'd like to see using components it's time to create.
1. First I'd like you to take the challenge and create the structure of the app. 
    I don't mean creating exactly how it looks but just the components with some dummy text.
    So the search component just says search component or movie card says movie card so you can get use to 
    creating your components. Maybe nest components inside folders according to where the component will go in the app.
    Also, try to create them by hand and then also using the angular-cli.
    This'll help you get a grasp on creating an angular application.
    So go ahead, pause, the video and create those components and then we'll do it together.
2. So how do you think you did? Does the structure make since to you, if you came back to it a month 
    from now would you be able to jump back in and modify something?
3.Awesome, so let's go ahead and do it together. First let's go ahead and make this top header with the search button
    We'll go ahead and just make this a component with a inline-template
    called HeaderComponent. and for right now were just going to put in some filler text.

4.Now let's do the movie details we have here (show details component) with the poster
    image on the side. Let's call that display-movie component and use the angular cli
    to make the external template and the component file by typing in the terminal
    ng g c displayMovie --inline-style true --flat true --spec false --prefix false
    and then just put some filler text in there. "Movie Details"

5.Then let's go ahead and create the search component. 
    And since this one has other components. We'll go ahead and make a folder with this one.
    using the angular-cli again
    ng g c search --inline-style true --spec false --prefix false
    Let's go ahead and put the input in this one.
6.Then remeber there's a lot of cards that show up that are like the preview of the movie 
    let's call them movie-preview,
    and use the anuglar cli to put them in the search foler by typing
    ng g c search/moviePreview --inline-style true --spec false --prefix false --flat true

    then let's go ahead and put some filler text and use that component a few times in our 
    search component

7.Last but not least let's make the footer component add call it footer and this time get the prefix
    that the cli gives us so that command would be
    ng g c footer --inline-style true --spec false --flat true
    And let's go ahead and put some filler text in there that just says "Footer" inside of a div
    Then put that in our app.component.html file

    Then we're done. Up next we'll go about styling each component with built&custom in classes

D.HTML/CSS creation
    1.So now we're going to setup just how each of these components looks. No functionality yet 
    just adding the necessary elements and classes to make it look more like the finished product.
    2.Let's first start with the app component 
        <main>
        <div class="container">
            <search-movie class="row" ></search-movie>
            <display-movie class="row"></display-movie>
        </div>
        </main>  
    3. Now let's do the header
    <header>
        <div class="row">
            <div class="col s4 offset-s4 search-btn center-align">
                <span class="material-icons">search</span>
            </div>
        </div>
    </header>
    4. Next up let's do the footer 
        <footer class="page-footer">
            <div class="container">
                    <div class="row">
                        <div class="col l6 s12">
                                <h5 class="white-text">Database provided by 
                                <a href="https://www.themoviedb.org/">The Movie DB</a>
                                </h5>
                                <p class="grey-text text-lighten-4"></p>
                        </div>
                    </div>
            </div>
            <div class="footer-copyright">
                    <div class="container">
                        Designed and Developed by: Leon Watson
                    </div> 
            </div>
        </footer>
    5. Now it's time for the search component
        <div class="col s12">
            <input 
                class="search-input" 
                type="text" 
                placeholder="Search A Movie"
                [(ngModel)]="search" 
                (input)="searchObserver.next(search)" 
                >
            <div class="row">
                <movie-preview></movie-preview>
                <movie-preview></movie-preview>
                <movie-preview></movie-preview>
                <movie-preview></movie-preview>
                <movie-preview></movie-preview>
                <h3 [ngStyle]="{'text-align':center}">
                    No results found for {{search}} 
                </h3>
            </div>
        </div>
    6. Now let's get the movie preview component all setup
    <div class="col s12 m4" [ngClass]="['movie']">
      <div class="card blue-grey darken-1">
        <div class="card-content white-text">
          <span class="card-title">{{ movie.title }}</span>
          <p>{{ movie.homepage }}</p>
          <div class="movie-year">{{ movie.release_date }}</div>
        </div>
      </div>
    </div>
    7. Last but not least the display movie component where we display the movies
        title, year, synapses and the img on the right
    <div class="col m7 s12">
        <h3 class="fade-in-right">{{ movie.title }}</h3>
        <div class="row">
        <div class="tagline col m3 fade-in-right slower">{{ movie.release_date }}</div>
        </div>
        <div class="row">
        <p class="flow-text col s12 fade-in-left slow">{{ movie.overview }}</p>
        </div>
    </div>
    <div class="col m5">
        <img class="movie-poster fade-in-left" 
            src="http://image.tmdb.org/t/p/original/rhIRbceoE9lR4veEXuwCC2wARtG.jpg" 
            alt=""
        >
    </div>

    